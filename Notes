#!/bin/bash -e

# RANDOM NOTES, NOT PART OF THE PROJECT!!!!!!!!!!!!!!!!!


# git clone https://github.com/lhmouse/nano-win.git
# cd nano-win

# sed quick reference https://anaturb.net/sed.htm

# gcc options guide https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#Warning-Options 

# PDCurses reference: https://pdcurses.org/docs/USERS.html
#       https://www.demo2s.com/c/c-doupdate-hdfm.html 

# Unicode Calculator https://www.branah.com/unicode-converter

# How MS tried to solve the WC (UTF-16) to MB (UTF-8) problem: https://learn.microsoft.com/en-us/windows/win32/api/stringapiset/nf-stringapiset-multibytetowidechar


# Modern WT API https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences


# gnulib has charwidth in ${gnulib_dir}/lib/uniwidth/width0.h
/* Generated automatically by gen-uni-tables.c for Unicode 15.0.0.  */
https://github.com/coreutils/gnulib/blob/master/lib/gen-uni-tables.c


# last commit name
git show -s --format=%s

# last commit message
git log -1 --pretty=%B

# last commit message with date
git log -1


# Date of last modification

git clone --depth=1 git://git.savannah.gnu.org/nano.git
cd nano

A=$( TZ=UTC git show --quiet --date='format-local:%Y-%m-%dT%H:%M:%SZ' --format="%cd" )


# Get date from latest release

B=$( wget -q https://api.github.com/repos/okibcn/myopenwrt/releases/latest -O - | awk -F \" -v RS="," '/published_at/ {print $(NF-1)}' )

# Dates comparison

if [[ $A<$B ]]; then echo "primero menor"; else echo "segundo menor"; fi


# Current UTC time:
TZ=UTC date +'%Y.%m.%dT%H:%M:%SZ'


git describe --tags 2>/dev/null` for Windows, build `git rev-list --count HEAD





Parse colors from rcfile
#########################
nano main()
 rcfile do_rcfiles() Search the right nanorc
  rcfile parse_one_nanorc() Checks if file can be opened
   rcfile parse_rcfile() parse nanorc for all elements
    rcfile parse_interface_color() ctreates the trio fg,bg,attr
     rcfile parse_combination() ctreates the trio fg,bg,attr
      rcfile color_to_short() color to integer, including 
       rcfile closest_index_color() code color to the nearest possible

Set colors
###########
color set_interface_colorpairs() takes colorcombo trio to interface_color_pair[int].
 pdc color init_pair()  
  pdc color init_extended_pair()  Checks some errors
   pdc color _init_pair_core()  does the job


Get a key from keybuffer
#########################
nanorc process_a_keystroke(void) wait for a key and...
 winio get_kbinput(WIN,showcursor) manages cursor visibility
  winio parse_kbinput(WIN) Most of key translation is done here <<<<<<<<
   winio int get_input(WIN) used in search too. asks to fill buffer from:
    winio void read_keys_from(WIN)   insert raw codes in buffer.
     pdc wgetch()
      pdc raw_wgetch()
    winio int get_code_from_plantation()  returns the code from rcfile or seeds the actions

Insert a key to buffers
#########################
main   (nano.c)
 process_a_keystroke
  inject
   update_line   (winio)
    update_softwrapped_line
     draw_row   SYNTAX COLOR PROBLEMS????
      mvwaddstr  (PDC addstr.c)
       waddnstr  Here is the filtering problem
        PDC_mbtowc() And this is the problem.
        waddch(wch)  combine symbols

String encoding transformations
################################
int PDC_mbtowc(wchar_t *pwc, const char *s, size_t n)
used in:
int waddnstr(WINDOW *win, const char *str, int n)
int winsnstr(WINDOW *win, const char *str, int n)
size_t PDC_mbstowcs(wchar_t *dest, const char *src, size_t n)


PRINT TO Console
#################
getch  raw_wgetch()
refresh doupdate()
refresh  wrefresh()
pdcdisp   PDC_transform_line(int lineno, int x, int len, const chtype *srcp)
pdcdisp    static void _new_packet(attr_t attr, int lineno, int x, int len, const chtype *srcp)
pdcdisp     _show_run_of_ansi_characters( const attr_t attr,
                           const int fore, const int back, const bool blink,
                           const int lineno, const int x, const chtype *srcp, const int len)



ALT+KEY PARSING
#################
global.c void shortcut_init(void)     <<< sc stuff
global.c  void add_to_sclist(int menus, const char *scstring, const int keycode,void (*function)(void), int toggle)
global.c   int keycode_from_string(const char *keystring)  -- getting the keycode from a string    These are the key functions for unknwon keys
winio.c  int parse_kbinput(WINDOW *frame)  -- getting keycode from keyboard                         These are the key functions for unknwon keys



Windows Clipboard here?
########################
cut copy_text() copy to linestruct *cutbuffer
cut paste_text() paste 
cut do_delete() normal or tiny
 cut zap_text(void)



#### VT NOTES ##########################################################################

pdcscrn 309: get screen size as part of initscr()
# ESCAPE CODES
'\0337\033[r\033[999;999H\033[6n\0338'   Get the screen size
'\0337\033[999;999H\033[6n\0338'   Get the screen size
tty returns '`e[58;169R'

"\033[m" reset color attr

pdckbd 84: Get key. returns -1 if no key.